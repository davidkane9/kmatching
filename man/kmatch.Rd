% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/kmatch.R
\name{kmatch}
\alias{kmatch}
\title{Create matching vectors based on data}
\usage{
kmatch(x, weight.var, match.var, n = 1, thin = 5, replace = FALSE,
  chains = 1, burn = 0.5)
}
\arguments{
\item{x}{is a data frame containing needed input data}

\item{weight.var}{character name of the column of the input weights}

\item{match.var}{character vector of names of columns of 'data' we wish to match on}

\item{n}{numeric number of weight vectors desired. Default is 1}

\item{thin}{only 1 out of every \code{thin} vectors will be recorded. Default is 5}

\item{replace}{if FALSE then any rows that had non-zero weight in \code{weight.var}
will be set to 0 in the output. Default is \code{FALSE}}

\item{chains}{number of chains. Default is 1.}

\item{burn}{is the number of points to burn in hitandrun (not very costly, because it just adds to total number
       of iterations, whereas thin is a multiple)}
}
\value{
Returns a list of "chains" matrices of 'n' sets of weights that match the given set of
weights in terms of weighted averages to the 'match.var' factors. The columns of each matrix
are the sets of weights.
}
\description{
Given a data frame and the specified matching vectors and weight vector,
\code{kmatch} extracts the matching vectors and weight vector from the
data set, and form them to a system of linear equations, whose matrix
expression is \eqn{Aw=b}, where A is the matching vectors and b is the
weight vector. The \eqn{w} is the weights we want.
\code{kmatch} then randomly samples \eqn{w} subject to the
non-negativity constraint \eqn{w_i >= 0} and \eqn{sum(w)=0}. These two
make the sampling space bounded so
uniform sampling over the whole sampling space is achievable. Then the
\eqn{w} is the weights we want.
}
\examples{
set.seed(40)
x <- data.frame(size = rnorm(10), weight = rep(.02, 10))
weights <- kmatch(x, weight.var = "weight", match.var = "size", n = 100, replace = TRUE)

x2 <- data.frame(var1 = c(-2,-1, 0, 1, 2),
                 var2 = c(1, -1, 2, -1, 0),
                 w = rep(.2, 5))
weights2 <- kmatch(x = x2, weight.var = "w",
                   match.var = c("var1", "var2"),
                   n = 10, thin = 1, replace= TRUE)[[1]]
}
\author{
Mike Flynn \email{mflynn210@gmail.com}
}

